<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.qhwy.quartet.pay.permission.dao.impl.RolePermissionDaoImpl">

	<!-- Pms权限管理：角色与权限关联表 -->
	<sql id="role_permission"> ROLE_PERMISSION </sql>

	<resultMap id="BaseResultMap"
		type="com.qhwy.quartet.pay.permission.entity.RolePermission">
		<id column="ID" property="id" jdbcType="DECIMAL" />
		<result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="EDITOR_USER" property="editorUser" jdbcType="VARCHAR" />
		<result column="EDIT_TIME" property="editTime" jdbcType="TIMESTAMP" />
		<result column="STATUS" property="status" jdbcType="DECIMAL" />
		<result column="REMARK" property="remark" jdbcType="VARCHAR" />
		<result column="ROLE_ID" property="roleId" jdbcType="DECIMAL" />
		<result column="PERMISSION_ID" property="permissionId"
			jdbcType="DECIMAL" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, CREATE_USER, CREATE_TIME, EDITOR_USER, EDIT_TIME, STATUS, REMARK,
		ROLE_ID, PERMISSION_ID
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from ROLE_PERMISSION
		where ID = #{id,jdbcType=DECIMAL}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from ROLE_PERMISSION
		where ID = #{id,jdbcType=DECIMAL}
	</delete>
	<insert id="insert"
		parameterType="com.qhwy.quartet.pay.permission.entity.RolePermission"
		keyProperty="id" useGeneratedKeys="true">
		<selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
			select SQC_PMS_ROLE_PERMISSION.NEXTVAL AS ID FROM DUAL
		</selectKey>
		insert into ROLE_PERMISSION (ID, CREATE_USER, CREATE_TIME,
		EDITOR_USER, EDIT_TIME, STATUS,
		REMARK, ROLE_ID, PERMISSION_ID
		)
		values (#{id,jdbcType=DECIMAL}, #{createUser,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{editorUser,jdbcType=VARCHAR}, #{editTime,jdbcType=TIMESTAMP}, #{status,jdbcType=DECIMAL},
		#{remark,jdbcType=VARCHAR}, #{roleId,jdbcType=DECIMAL},
		#{permissionId,jdbcType=DECIMAL}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.qhwy.quartet.pay.permission.entity.RolePermission">
		insert into ROLE_PERMISSION
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="createUser != null">
				CREATE_USER,
			</if>
			<if test="createTime != null">
				CREATE_TIME,
			</if>
			<if test="editorUser != null">
				EDITOR_USER,
			</if>
			<if test="editTime != null">
				EDIT_TIME,
			</if>
			<if test="status != null">
				STATUS,
			</if>
			<if test="remark != null">
				REMARK,
			</if>
			<if test="roleId != null">
				ROLE_ID,
			</if>
			<if test="permissionId != null">
				PERMISSION_ID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=DECIMAL},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="editorUser != null">
				#{editorUser,jdbcType=VARCHAR},
			</if>
			<if test="editTime != null">
				#{editTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=DECIMAL},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=DECIMAL},
			</if>
			<if test="permissionId != null">
				#{permissionId,jdbcType=DECIMAL},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.qhwy.quartet.pay.permission.entity.RolePermission">
		update ROLE_PERMISSION
		<set>
			<if test="createUser != null">
				CREATE_USER = #{createUser,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="editorUser != null">
				EDITOR_USER = #{editorUser,jdbcType=VARCHAR},
			</if>
			<if test="editTime != null">
				EDIT_TIME = #{editTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				STATUS = #{status,jdbcType=DECIMAL},
			</if>
			<if test="remark != null">
				REMARK = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				ROLE_ID = #{roleId,jdbcType=DECIMAL},
			</if>
			<if test="permissionId != null">
				PERMISSION_ID = #{permissionId,jdbcType=DECIMAL},
			</if>
		</set>
		where ID = #{id,jdbcType=DECIMAL}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.qhwy.quartet.pay.permission.entity.RolePermission">
		update ROLE_PERMISSION
		set CREATE_USER = #{createUser,jdbcType=VARCHAR},
		CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
		EDITOR_USER = #{editorUser,jdbcType=VARCHAR},
		EDIT_TIME = #{editTime,jdbcType=TIMESTAMP},
		STATUS = #{status,jdbcType=DECIMAL},
		REMARK = #{remark,jdbcType=VARCHAR},
		ROLE_ID = #{roleId,jdbcType=DECIMAL},
		PERMISSION_ID = #{permissionId,jdbcType=DECIMAL}
		where ID = #{id,jdbcType=DECIMAL}
	</update>

	<sql id="condition_sql">
		<!-- Equal query -->
		<if test="roleId != null"> and role_id = #{roleId}</if>
		<if test="permissionId != null"> and permission_id = #{permissionId}</if>
	</sql>

	<select id="listByPermissionId" parameterType="Long" resultMap="BaseResultMap">
		select * from
		<include refid="role_permission" />
		where permission_id = #{permissionId}
	</select>

	<select id="listByRoleId" parameterType="Long" resultMap="BaseResultMap">
		select * from
		<include refid="role_permission" />
		where role_id = #{roleId}
	</select>

	<select id="listByRoleIds" resultMap="BaseResultMap">
		select * from
		<include refid="role_permission" />
		where role_id in
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">#{item}</foreach>
	</select>

	<delete id="deleteByPermissionId" parameterType="Long">
		delete from
		<include refid="role_permission" />
		where permission_id = #{permissionId}
	</delete>

	<delete id="deleteByRoleId" parameterType="Long">
		delete from
		<include refid="role_permission" />
		where role_id = #{roleId}
	</delete>

	<delete id="deleteByRoleIdAndPermissionId" parameterType="java.util.Map">
		delete from
		<include refid="role_permission" />
		where role_id = #{roleId} and permission_id = #{permissionId}
	</delete>
</mapper>